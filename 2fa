                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall; 
                                                          local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local       
                                                        function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if  
                                                      (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while true  
                                                    do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v100=v5(v82,v19);v19=nil;return v100 
                                                  ;else return v82;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v83= 
                                                  0 -0 ;local v84;while true do if (v83==(0 -(1637 -(1523 + 114)))) then v84=(v31/((3 -1)^(v32-1)))%( 
                                                (4 -(2 + 0))^(((v33-(620 -(555 + 64))) -(v32-((1328 -396) -(857 + 74)))) + (569 -(367 + 201)))) ;return 
                                                 v84-(v84%(928 -(214 + 713))) ;end end else local v85=2^(v32-(1 + 0)) ;return (((v31%(v85 + v85))>=v85)   
                                              and ((1066 -(68 + 997)) + 0)) or (877 -((1552 -(226 + 1044)) + 595)) ;end end local function v21()local v34=0 
                                               -0 ;local v35;while true do if (v34==1) then return v35;end if (v34==(117 -(32 + 85))) then v35=v1(v16,v18,  
                                            v18);v18=v18 + 1 + (957 -(892 + 65)) ;v34=1 + (0 -0) ;end end end local function v22()local v36,v37=v1(v16,v18,   
                                            v18 + (3 -1) );v18=v18 + (3 -1) ;return (v37 * (606 -(87 + 263))) + v36 ;end local function v23()local v38=180 -(67 
                                           + 66 + 47) ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -1)) then return (v42 * (12302277 +      
                                          4474939)) + (v41 * (47703 + 17833)) + (v40 * 256) + v39 ;end if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (3 -0 
                                          ) + 0 );v18=v18 + ((1198 -(1069 + 118)) -(15 -8)) ;v38=3 -2 ;end end end local function v24()local v43=v23();local v44=v23( 
                                          );local v45=1 -(1913 -(1789 + 124)) ;local v46=(v20(v44,1 + 0 ,35 -15 ) * ((8 -6)^((109 -77) + 0))) + v43 ;local v47=v20(   
                                        v44,812 -(368 + 423) ,97 -66 );local v48=((v20(v44,891 -(814 + 45) )==1) and  -(19 -(10 + 8))) or (3 -2) ;if (v47==(442 -(416 + 
                                         26))) then if (v46==(0 -0)) then return v48 * (0 + (1747 -(760 + 987 --[[==============================]]))) ;else v47=1 -0 ;v45 
                                        =0;end elseif (v47==(3621 -1574)) then return ((v46==(438 - --[[============================================]](145 + 293))) and ( 
                                        v48 * ((431 -(44 + (1152 -(745 + 21))))/0))) or (v48 *  --[[======================================================]]NaN) ;end       
                                      return v8(v48,v47-(2509 -(998 + 168 + 320)) ) * (v45  --[[==========================================================]]+ (v46/((9 -7)^(  
                                      17 + 35)))) ;end local function v25(v49)local v50=0 --[[==============================================================]];local v51;     
                                      local v52;while true do if (v50==(2 -(2 -1))) then  --[[================================================================]]v51=v3(v16,v18, 
                                      (v18 + v49) -(3 -2) );v18=v18 + v49 ;v50=1 + 1 ;end --[[==================================================================]] if (v50==((  
                                      1819 -(1703 + 114)) + 0)) then v52={};for v89=1056  --[[==================================================================]]-(87 + 968) , #   
                                    v51 do v52[v89]=v2(v1(v3(v51,v89,v89)));end v50=3;end --[[====================================================================]] if (v50==(0  
                    -0)) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + 0)) then   --[[====================================================================]]return "";end   
              end v50=2 -1 ;end if (v50==(1416 -(447 + 966))) then return v6(v52);end end --[[======================================================================]] end local    
            v26=v23;local function v27(...)return {...},v12("#",...);end local function   --[[======================================================================]]v28()local    
          v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do --[[======================================================================]] local v66=0  
        + 0 ;while true do if (v66~=0) then else if (v53~=(0 -0)) then else local v95=0 - --[[======================================================================]]0 ;while true 
         do if (v95~=(561 -(79 + 482))) then else v54={};v55={};v95=1;end if (v95==(1901  --[[======================================================================]]-(106 + 1794) 
      )) then v56={};v53=1 -0 ;break;end end end if (v53==3) then local v96=0 + 0 ;local  --[[======================================================================]]v97;while     
      true do if (v96==(0 -0)) then v97=0;while true do if ((0 -0)~=v97) then else local    --[[==================================================================]]v114=285 -(134  
      + 151) ;while true do if (0==v114) then for v227=585 -(57 + 527) ,v23() do v55[v227-1 --[[================================================================]] ]=v28();end      
    return v57;end end end end break;end end end v66=1;end if ((1428 -(41 + 1386))==v66)    --[[==============================================================]]then if (v53==(   
    1666 -(970 + 695))) then local v98=103 -(17 + 86) ;while true do if (v98==(0 + 0)) then   --[[==========================================================]]v57={v54,v55,nil,   
    v56};v58=v23();v98=1 -0 ;end if (v98==(3 -2)) then v59={};v53=1826 -(1195 + 629) ;break;end --[[====================================================]] end end if (v53==(2 -0 
    )) then for v101=1,v58 do local v102=0 -0 ;local v103;local v104;while true do if (v102~=0)   --[[==============================================]]then else local v111=241  
    -(187 + 54) ;local v112;while true do if (v111==(780 -(162 + 618))) then v112=0;while true do if  --[[====================================]](v112==0) then v103=v21();    
    v104=nil;v112=1 + 0 ;end if (1==v112) then v102=1 + 0 ;break;end end break;end end end if ((1 + 0)==  --[[========================]]v102) then if (v103==(1 -0)) then     
    v104=v21()~=0 ;elseif (v103==(2 -0)) then v104=v24();elseif (v103==3) then v104=v25();end v59[v101]=v104;break;end end end v57[1 + 2 ]=v21();for v105=1 -0 ,v23() do    
  local v106=1636 -(1373 + 263) ;local v107;local v108;local v109;local v110;while true do if (v106~=(67 -(30 + 35))) then else while true do if (v107~=(1 + 0)) then     
  else v110=nil;while true do if ((1257 -(1043 + 214))==v108) then local v229=1000 -(451 + 549) ;while true do if ((3 -2)==v229) then v108=1 + 0 ;break;end if (v229~=( 
  0 -0)) then else v109=0 -0 ;v110=nil;v229=1385 -(746 + 638) ;end end end if (v108~=1) then else while true do if (v109~=(580 -(361 + 219))) then else v110=v21();if (   
  v20(v110,321 -(53 + 267) ,1 + 0 )==(0 -0)) then local v292=0;local v293;local v294;local v295;local v296;while true do if (v292~=(343 -(218 + 123))) then else while    
  true do if (v293~=(984 -(18 + 964))) then else if (v20(v295,3 -2 ,1582 -(1535 + 46) )~=1) then else v296[2]=v59[v296[2]];end if (v20(v295,2 + 0 ,1 + 1 )==(561 -(306 +  
  254))) then v296[3 + 0 ]=v59[v296[1 + 2 ]];end v293=3;end if (v293~=3) then else if (v20(v295,5 -2 ,3)==1) then v296[130 -(116 + 10) ]=v59[v296[4]];end v54[v105]=v296; 
  break;end if (v293==1) then local v308=0;while true do if (v308~=(1468 -(899 + 568))) then else v293=740 -(542 + 196) ;break;end if (v308~=(0 + 0)) then else v296={v22 
  (),v22(),nil,nil};if (v294==(572 -(426 + 146))) then local v316=0 + 0 ;local v317;while true do if (v316~=(0 + 0)) then else v317=0 -0 ;while true do if (v317~=(1456 - 
  (282 + 1174))) then else v296[7 -4 ]=v22();v296[4]=v22();break;end end break;end end elseif (v294==(812 -(569 + 242))) then v296[8 -5 ]=v23();elseif (v294==(1 + 1))    
  then v296[3]=v23() -((1026 -(706 + 318))^(1137 -(118 + 1003))) ;elseif (v294==(1254 -(721 + 530))) then local v322=0;local v323;local v324;while true do if (v322==(    
  1271 -(945 + 326))) then v323=0 -0 ;v324=nil;v322=1 + 0 ;end if (v322~=(978 -(553 + 424))) then else while true do if (v323~=(0 -0)) then else v324=0 + 0 ;while true   
  do if (v324~=0) then else v296[3 + 0 ]=v23() -(2^(16 + 0)) ;v296[4]=v22();break;end end break;end end break;end end end v308=1;end end end if (v293==0) then local v309=0 
   + 0 ;while true do if (v309==0) then v294=v20(v110,702 -(271 + 429) ,3 + 0 );v295=v20(v110,1504 -(1408 + 92) ,4 + 2 );v309=2 -1 ;end if (v309~=(1087 -(461 + 625))) then 
   else v293=1289 -(993 + 295) ;break;end end end end break;end if (v292==(2 -1)) then v295=nil;v296=nil;v292=1 + 1 ;end if (v292~=(1171 -(418 + 753))) then else local     
  v303=0 + 0 ;while true do if (v303~=(0 + 0)) then else v293=0 + 0 ;v294=nil;v303=1 + 0 ;end if (v303==(530 -(406 + 123))) then v292=1770 -(1749 + 20) ;break;end end end  
  end end break;end end break;end end break;end if (0~=v107) then else local v124=1329 -(797 + 532) ;while true do if (1~=v124) then else v107=1 + 0 ;break;end if (v124==( 
  0 + 0)) then v108=0 -0 ;v109=nil;v124=1 + 0 ;end end end end break;end if (v106~=(731 -(476 + 255))) then else v107=0;v108=nil;v106=1;end if (v106~=(1323 -(1249 + 73)))  
  then else v109=nil;v110=nil;v106=1 + 1 ;end end end v53=1148 -(466 + 679) ;end break;end end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];    
  local v65=v60[3];return function(...)local v67=v63;local v68=v64;local v69=v65;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",... 
  ) -1 ;local v76={};local v77={};for v86=0,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + 1 ];else v77[v86]=v74[v86 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;   
  local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=28) then if (v80<=13) then if (v80<=6) then if (v80<=2) then if (v80<=0) then local v115=v79[2];v77[v115]=v77[   
  v115](v13(v77,v115 + 1 ,v79[3]));elseif (v80>1) then local v127=0;local v128;while true do if (v127==0) then v128=v79[2];v77[v128]=v77[v128](v13(v77,v128 + 1 ,v72));     
  break;end end else v77[v79[2]]();end elseif (v80<=4) then if (v80>3) then local v129=v79[2];v77[v129]=v77[v129]();else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80==5 
  ) then local v133=v79[2];local v134,v135=v70(v77[v133](v13(v77,v133 + 1 ,v79[3])));v72=(v135 + v133) -1 ;local v136=0;for v207=v133,v72 do local v208=0;while true do if  
  (v208==0) then v136=v136 + 1 ;v77[v207]=v134[v136];break;end end end else local v137=0;local v138;local v139;while true do if (v137==1) then v77[v138 + 1 ]=v139;v77[   
  v138]=v139[v79[4]];break;end if (v137==0) then v138=v79[2];v139=v77[v79[3]];v137=1;end end end elseif (v80<=9) then if (v80<=7) then v77[v79[2]][v79[3]]=v79[4];elseif  
  (v80>8) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else local v140=0;local v141;while true do if (v140==0) then v141=v79[2];v77[v141](v13(v77, 
    v141 + 1 ,v79[3]));break;end end end elseif (v80<=11) then if (v80>10) then v77[v79[2]]=v77[v79[3]][v79[4]];else local v144=v79[2];local v145,v146=v70(v77[v144](v13( 
    v77,v144 + 1 ,v79[3])));v72=(v146 + v144) -1 ;local v147=0;for v209=v144,v72 do local v210=0;while true do if (v210==0) then v147=v147 + 1 ;v77[v209]=v145[v147];     
    break;end end end end elseif (v80==12) then v77[v79[2]]=v61[v79[3]];else local v150=v79[2];local v151={};for v211=1, #v76 do local v212=v76[v211];for v231=0, #v212   
    do local v232=v212[v231];local v233=v232[1];local v234=v232[2];if ((v233==v77) and (v234>=v150)) then local v268=0;while true do if (v268==0) then v151[v234]=v233[   
      v234];v232[1]=v151;break;end end end end end end elseif (v80<=20) then if (v80<=16) then if (v80<=14) then v77[v79[2]]=v79[3]~=0 ;elseif (v80>15) then v77[v79[2] 
      ][v79[3]]=v77[v79[4]];else v77[v79[2]][v79[3]]=v79[4];end elseif (v80<=18) then if (v80==17) then v77[v79[2]]=v79[3]~=0 ;elseif  not v77[v79[2]] then v71=v71 + 1 
       ;else v71=v79[3];end elseif (v80>19) then v77[v79[2]]={};else local v158=v68[v79[3]];local v159;local v160={};v159=v10({},{__index=function(v213,v214)local v215 
        =0;local v216;while true do if (v215==0) then v216=v160[v214];return v216[1][v216[2]];end end end,__newindex=function(v217,v218,v219)local v220=0;local v221;   
        while true do if (v220==0) then v221=v160[v218];v221[1][v221[2]]=v219;break;end end end});for v222=1,v79[4] do v71=v71 + 1 ;local v223=v67[v71];if (v223[1]==36 
        ) then v160[v222-1 ]={v77,v223[3]};else v160[v222-1 ]={v61,v223[3]};end v76[ #v76 + 1 ]=v160;end v77[v79[2]]=v29(v158,v159,v62);end elseif (v80<=24) then if (  
          v80<=22) then if (v80==21) then local v162=v79[2];v77[v162]=v77[v162](v13(v77,v162 + 1 ,v79[3]));else v77[v79[2]]=v77[v79[3]];end elseif (v80>23) then if   
            v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif ((v79[3]=="_ENV") or (v79[3]=="getfenv")) then v77[v79[2]]=v62;else v77[v79[2]]=v62[v79[3]];end  
              elseif (v80<=26) then if (v80==25) then v61[v79[3]]=v77[v79[2]];else v77[v79[2]]=v29(v68[v79[3]],nil,v62);end elseif (v80==27) then local v169=v79[2];  
                v77[v169]=v77[v169](v77[v169 + 1 ]);else local v171=0;local v172;local v173;local v174;while true do if (v171==0) then v172=v68[v79[3]];v173=nil;v171 
                  =1;end if (v171==2) then for v272=1,v79[4] do v71=v71 + 1 ;local v273=v67[v71];if (v273[1]==36) then v174[v272-1 ]={v77,v273[3]};else v174[v272-1 
                       ]={v61,v273[3]};end v76[ #v76 + 1 ]=v174;end v77[v79[2]]=v29(v172,v173,v62);break;end if (v171==1) then v174={};v173=v10({},{__index=        
                                  function(v275,v276)local v277=v174[v276];return v277[1][v277[2]];end,__newindex=function(v278,v279,v280)local v281=v174[v279];    
                                      v281[1][v281[2]]=v280;end});v171=2;end end end elseif (v80<=42) then if (v80<=35) then if (v80<=31) then if (v80<=29) then    
                                      v61[v79[3]]=v77[v79[2]];elseif (v80==30) then if ((v79[3]==           "_ENV") or (v79[3]=="getfenv")) then v77[v79[2]]=v62;   
                                      else v77[v79[2]]=v62[v79[3]];end else local v175=v79[2];v77[          v175]=v77[v175](v13(v77,v175 + 1 ,v72));end elseif (  
                                      v80<=33) then if (v80>32) then for v225=v79[2],v79[3] do v77[         v225]=nil;end else v77[v79[2]]=v61[v79[3]];end elseif 
                                       (v80>34) then do return;end else v77[v79[2]]=v79[3];end              elseif (v80<=38) then if (v80<=36) then v77[v79[2]]=  
                                      v77[v79[3]];elseif (v80>37) then local v181=0;local v182;               while true do if (v181==0) then v182=v79[2];v77[    
                                      v182](v13(v77,v182 + 1 ,v79[3]));break;end end else local               v183=v79[2];v77[v183]=v77[v183](v77[v183 + 1 ]);end 
                                       elseif (v80<=40) then if (v80>39) then local v185=v79[2];              local v186=v77[v79[3]];v77[v185 + 1 ]=v186;v77[   
                                        v185]=v186[v79[4]];else local v190=0;local v191;while true            do if (v190==0) then v191=v79[2];v77[v191](v77[   
                                        v191 + 1 ]);break;end end end elseif (v80==41) then if  not              v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3]; 
                                        end elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71             =v79[3];end elseif (v80<=49) then if (v80<=45 
                                        ) then if (v80<=43) then for v125=v79[2],v79[3] do v77[                 v125]=nil;end elseif (v80>44) then v77[v79[2] 
                                        ]();else v71=v79[3];end elseif (v80<=47) then if (v80==46                 ) then v77[v79[2]]={};else local v194=0;  
                                        local v195;local v196;while true do if (v194==0) then                     v195=v79[2];v196={};v194=1;end if (1==    
                                          v194) then for v283=1, #v76 do local v284=v76[v283];for                    v285=0, #v284 do local v286=0;local  
                                          v287;local v288;local v289;while true do if (v286==1)                        then v289=v287[2];if ((v288==  
                                            v77) and (v289>=v195)) then v196[v289]=v288[v289];                          v287[1]=v196;end break;   
                                            end if (v286==0) then v287=v284[v285];v288=v287[1                                 ];v286=1;   
                                              end end end end break;end end end elseif (v80 
                                                >48) then local v197=0;local v198;while   
                                                    true do if (v197==0) then v198=v79[ 
                                                          2];v77[v198](v77[v198 + 


--------------------------------------------------------------------------------
 1 ]);break;end end elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=53) then if (v80<=51) then if (v80==50) then v77[v79[2]]=v79[3];else v71=v79[3];end elseif (v80==52) then do return;end else v77[v79[2]]=v29(v68[v79[3]],nil,v62);end elseif (v80<=55) then if (v80==54) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else local v203=v79[2];v77[v203]=v77[v203]();end elseif (v80>56) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]][v79[3]]=v77[v79[4]];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
