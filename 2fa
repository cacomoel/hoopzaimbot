-- Locals
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/cacomoel/hoopzaimbot/main/o"))()
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local gui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local speed = false
local jump = false
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local db = {}
local player = Players.LocalPlayer.Character:FindFirstChild("Humanoid")
-- Locals end

-- Detect games
if game.PlaceId == 8737899170 then
	OrionLib:MakeNotification({
		Name = "Game Supported!",
		Content = "Loading exploits for Pet Simulator...",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	OrionLib:MakeNotification({
		Name = "Loaded!",
		Content = "Exploits Loaded successfully!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1) 
	loadstring(game:HttpGet('https://raw.githubusercontent.com/SKOIXLL/RIVERHUB-SKYHUB/main/WL.lua'))();
elseif game.PlaceId == 13772394625 then
	OrionLib:MakeNotification({
		Name = "Game Supported!",
		Content = "Loading exploits for Blade Ball...",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	OrionLib:MakeNotification({
		Name = "Loaded!",
		Content = "Exploits Loaded successfully!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Sussy-Tech/Scripts/main/BladeBall.lua"))();
	---- FF2 HUB 
elseif game.PlaceId == 8204899140 then
	OrionLib:MakeNotification({
		Name = "Game Supported!!",
		Content = "Loading Exploit for FF2..." .. tostring("Do people actually read these?"),
		Image = "rbxassetid://14372116641",
		Time = 5
	})
	wait(1.5)
	OrionLib:MakeNotification({
		Name = "LOADED FF2 SCRIPT",
		Content = "Loaded up sucessfully..." .. ("Again do people actually read this?"), -- no --- yes they do -- uno reverse --- black monkeys
		Description = "",
		Image = "rbxassetid://14372116641",
		Time = 5
	})
	loadstring(game:HttpGet("https://pastebin.com/raw/CL6ngd2J"))()

elseif game.PlaceId == 623694595 or
	game.PlaceId == 3323720631 or
	game.PlaceId == 3323729375 or
	game.PlaceId == 5122329423 or
	game.PlaceId == 4923145720 then
	OrionLib:MakeNotification({
		Name = "Game Supported!",
		Content = "Loading exploits for NBA Phenom...",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	OrionLib:MakeNotification({
		Name = "Loaded!",
		Content = "Exploits Loaded successfully!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/cacomoel/hoopzaimbot/main/nbaphenom.lua"))();

elseif game.PlaceId == 2338325648 then
	OrionLib:MakeNotification({
		Name = "Game Supported!",
		Content = "Loading exploits for Ultimate Football...",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	OrionLib:MakeNotification({
		Name = "Loaded!",
		Content = "Exploits Loaded successfully!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/cacomoel/hoopzaimbot/main/ultft.lua"))()
elseif game.PlaceId == 6569480109 then
	OrionLib:MakeNotification({
		Name = "Game Supported!",
		Content = "Loading exploits for Street Ball...",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	OrionLib:MakeNotification({
		Name = "Loaded!",
		Content = "Exploits Loaded successfully!",
		Image = "rbxassetid://4483345998",
		Time = 5
	})
	wait(1)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/carolesdaughter/Streetball-Silent-Aim/main/SilentAimbot.lua"))()
else

	local Window = DrRayLibrary:Load("Bread Hub", "Default")

	-- Universal hub start
	local Main = DrRayLibrary.newTab("Universal", "10742722733")

	-- Hoopz tab
	local HoopzTab = DrRayLibrary.newTab("Hoopz", "5975697878")

	-- Hoopz tab
	local Dahood = DrRayLibrary.newTab("Dahood", "14260419570")

	local speedToggle = Main.newToggle("Speed Hack", "Enables speed hack", false, function(toggleState)
		if toggleState then
			speed = true
			player.WalkSpeed = tonumber(speedInput.Text) or 5
		else
			speed = false
		end
	end)

	local speedInput = Main.newInput("Speed", "Set speed value", function(text)
		if speed then
			player.WalkSpeed = tonumber(text) or 5
		else
			-- Handle error
		end
	end)

	local jumpToggle = Main.newToggle("Jump Hack", "Enables jump hack", false, function(toggleState)
		if toggleState then
			jump = true
			player.JumpPower = tonumber(jumpInput.Text) or 5
		else
			jump = false
		end
	end)

	local jumpInput = Main.newInput("Jump", "Set jump value", function(text)
		if jump then
			player.JumpPower = tonumber(text) or 5
		else
			-- Handle error
		end
	end)

	-- Function to continuously check and update hacks
	local function updateHacks()
		while true do
			wait(1)  -- Adjust the wait time according to your needs

			if speed then
				player.WalkSpeed = tonumber(speedInput.Text) or 5
			end

			if jump then
				player.JumpPower = tonumber(jumpInput.Text) or 5
			end
		end
	end

	-- Create a coroutine and resume it
	local hacksCoroutine = coroutine.create(updateHacks)
	coroutine.resume(hacksCoroutine)

	Main.newButton("Fly", "Enables fly", function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/cacomoel/hoopzaimbot/main/fly.lua", true))()
	end)

	HoopzTab.newButton("Tap to Shoot", "Enables tap to shoot", function()
		local Script = game:HttpGet("https://raw.githubusercontent.com/6ce/Hoopz-Silent-Aims/main/FindPartOnRayWithIgnoreList.lua", true)
		loadstring(Script)()
	end)

	HoopzTab.newButton("Range Indicator", "Enables range indicator", function()
		loadstring(game:HttpGet("https://github.com/cacomoel/hoopzaimbot/raw/main/Indicator.lua"))()
	end)

	HoopzTab.newToggle("Silent Aim", "Always shoot buckets", false, function(toggleState)
		if toggleState then
			_G.Aimbot = true
		else
			_G.Aimbot = false
		end
	end)
	
	HoopzTab.newToggle("Reach", "Take the ball from faraway", false, function(toggleState)
		if toggleState then
			_G.Reach = true
		else
			_G.Reach = false
		end
	end)

	local reset = false

	pcall(
		function()
			if _G.stepped then
				reset = true
				_G.stepped:Disconnect()
				_G.input:Disconnect()
				_G.charAdded:Disconnect()
				_G.charAdded = nil
				_G.stepped = nil
				_G.input = nil
				print("RESET")
			end

			if not reset then
				print("LOADED")
			end
		end
	)

	local plr = game.Players.LocalPlayer
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local shootingEvent = game:GetService("ReplicatedStorage").shootingEvent

	if workspace:FindFirstChild("PracticeArea") then
		workspace.PracticeArea.Parent = workspace.Courts
	end

	local jumping = false

	for i, v in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
		for z, x in pairs(getupvalues(v.Function)) do
			if type(x) == "table" and rawget(x, 1) then
				_G.method = x
			elseif z == 10 then
				_G.key = x
			end
		end
	end

	for i, v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("Size"))) do
		v:Disable()
	end

	for i, v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("Color"))) do
		v:Disable()
	end

	for i, v in pairs(getconnections(plr.Character.HumanoidRootPart:GetPropertyChangedSignal("BrickColor"))) do
		v:Disable()
	end

	for i, v in pairs(getconnections(plr.Character.Humanoid:GetPropertyChangedSignal("WalkSpeed"))) do
		v:Disable()
	end

	local ground

	local part = workspace:FindPartOnRay(Ray.new(plr.Character.Torso.Position, Vector3.new(0, -100, 5)))
	if part then
		ground = part
	end

	local tracking = false
	local player

	function updateNearestPlayerWithBall()
		local dist = 9e9
		for i, v in pairs(game.Players:GetPlayers()) do
			if
				v.Name ~= plr.Name and v.Character and v.Character:FindFirstChild("Basketball") and
				not plr.Character:FindFirstChild("Basketball") and
				(plr.Character.Torso.Position - v.Character.Torso.Position).Magnitude < 50
			then
				local mag = (plr.Character.Torso.Position - v.Character.Torso.Position).Magnitude
				if dist > mag then
					dist = mag
					player = v
				end
			end
		end
	end

	if _G.hook ~= nil then
		_G.hook = ""
		_G.hook =
			hookmetamethod(
				game,
				"__index",
				newcclosure(
					function(self, idx)
						if tostring(self) == "HumanoidRootPart" and idx == "Size" then
						return Vector3.new(2, 2, 1)
					elseif tostring(self) == "HumanoidRootPart" and idx == "BrickColor" then
						return BrickColor.new("Medium stone grey")
					elseif tostring(self) == "HumanoidRootPart" and idx == "Color" then
						return Color3.fromRGB(163, 162, 165)
					elseif tostring(self) == "Humanoid" and idx == "WalkSpeed" then
						return 16
					end
						return hook(self, idx)
					end
				)
			)
	end

	shootingEvent.OnClientEvent:Connect(
		function(newKey)
			_G.key = newKey
		end
	)

	function setup()
		local dist, goal = 9e9, nil
		for i, v in pairs(workspace.Courts:GetDescendants()) do
			if v.Name == "Swish" and v:IsA("Sound") and plr.Character and plr.Character:FindFirstChild("Torso") then
				local mag = (plr.Character.Torso.Position - v.Parent.Position).Magnitude
				if dist > mag then
					dist = mag
					goal = v.Parent
				end
			end
		end
		return dist, goal
	end

	function power()
		return plr.Power
	end

	function changePower(goal)
		power().Value = goal
	end

	function table(a, b)
		local args = {
			X1 = a.X,
			Y1 = a.Y,
			Z1 = a.Z,
			X2 = b.X,
			Y2 = b.Y,
			Z2 = b.Z
		}

		return {
			args[_G.method[1]],
			args[_G.method[2]],
			args[_G.method[3]],
			args[_G.method[4]],
			args[_G.method[5]],
			args[_G.method[6]]
		}
	end

	function arc()
		local dist, goal = setup()

		dist = math.floor(dist)
		print(dist)
		if dist == 12 or dist == 13 then
			return 15
		elseif dist == 14 or dist == 15 then
			return 20
		elseif dist == 16 or dist == 17 then
			return 15
		elseif dist == 18 then
			return 25
		elseif dist == 19 then
			return 20
		elseif dist == 20 or dist == 21 then
			return 20
		elseif dist == 22 or dist == 23 then
			return 25
		elseif dist == 24 or dist == 25 then
			return 20
		elseif dist == 26 then
			return 15
		elseif dist == 27 or dist == 28 then
			return 25
		elseif dist == 29 or dist == 30 then
			return 20
		elseif dist == 31 then
			return 15
		elseif dist == 32 or dist == 33 then
			return 30
		elseif dist == 34 or dist == 35 or dist == 36 then
			return 25
		elseif dist == 37 or dist == 38 then
			return 35
		elseif dist == 39 or dist == 40 then
			return 30
		elseif dist == 41 then
			return 25
		elseif dist == 42 or dist == 43 then
			return 40
		elseif dist == 44 then
			return 35
		elseif dist == 45 or dist == 46 then
			return 30
		elseif dist == 47 or dist == 48 then
			return 45
		elseif dist == 49 then
			return 40
		elseif dist == 50 then
			return 35
		elseif dist == 51 then
			return 50
		elseif dist == 52 then
			return 55
		elseif dist == 53 or dist == 54 then
			return 50
		elseif dist == 55 then
			return 45
		elseif dist == 56 then
			return 40
		elseif dist == 57 or dist == 58 then
			return 55
		elseif dist == 59 or dist == 60 or dist == 61 then
			return 50
		elseif dist == 62 or dist == 63 then
			return 65
		elseif dist == 64 then
			return 55
		elseif dist == 65 then
			return 60
		elseif dist == 66 or dist == 67 then
			return 50
		elseif dist == 68 or dist == 69 then
			return 75
		elseif dist == 70 or dist == 71 then
			return 70
		elseif dist == 72 then
			return 65
		elseif dist == 73 then
			return 60
		elseif dist == 74 then
			return 50
		elseif jumping then
			if dist == 9 or dist == 10 then
				return 20
			elseif dist == 11 or dist == 12 then
				return 15
			end
		end
	end

	function getNearestPart(torso)
		local dist, part = 9e9
		for i, v in pairs(plr.Character:GetChildren()) do
			if v:IsA("Part") and torso then
				local mag = (v.Position - torso.Position).Magnitude
				if dist > mag then
					dist = mag
					part = v
				end
			end
		end
		return part
	end

	function stepped()
		pcall(
			function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and _G.Aimbot then
					local pwr = power()
					local dist, goal = setup()
					local root = plr.Character.HumanoidRootPart

					dist = math.floor(dist)

					if hasBall then
						if dist >= 13 and dist <= 16 then
							changePower(30)
						elseif dist >= 17 and dist <= 21 then
							changePower(35)
						elseif dist >= 22 and dist <= 26 then
							changePower(40)
						elseif dist >= 27 and dist <= 31 then
							changePower(45)
						elseif dist >= 32 and dist <= 36 then
							changePower(50)
						elseif dist >= 37 and dist <= 41 then
							changePower(55)
						elseif dist >= 42 and dist <= 46 then
							changePower(60)
						elseif dist >= 47 and dist <= 50 then
							changePower(65)
						elseif dist >= 51 and dist <= 56 then
							changePower(70)
						elseif dist >= 57 and dist <= 61 then
							changePower(75)
						elseif dist >= 62 and dist <= 67 then
							changePower(80)
						elseif dist >= 68 and dist <= 74 then
							changePower(85)
						elseif jumping and dist == 9 or dist == 10 or dist == 11 or dist == 12 then
							changePower(25)
						else
							-- nah, i'd win
						end
					elseif root and not hasBall and _G.Aimbot then
						root.Transparency = 1
					elseif root and not _G.Aimbot then
						root.Transparency = 1
					end
				end

				updateNearestPlayerWithBall()

				if _G.WS ~= 16 and plr.Character:WaitForChild("Humanoid").WalkSpeed ~= 0 then
					plr.Character:WaitForChild("Humanoid").WalkSpeed = _G.WS
				end

				if
					tracking and player and plr.Character and plr.Character:FindFirstChild("Humanoid") and
					not plr.Character:FindFirstChild("Basketball") and
					player.Character and
					player.Character:FindFirstChild("Basketball")
				then
					plr.Character.Humanoid:MoveTo(
						player.Character.Basketball:FindFirstChildOfClass("Part").Position +
							player.Character.Torso.CFrame.LookVector +
							((player.Character.Humanoid.MoveDirection * 2) + (plr.Character.Torso.Velocity.Unit * 3))
					)

					if (player.Character.Torso.Position.Y - ground.Position.Y) > 2.5 then
						plr.Character.Humanoid.Jump = true
					end
				elseif
					tracking and player ~= nil and player.Character and plr.Character and
					plr.Character:FindFirstChild("Basketball") or
					not player.Character:FindFirstChild("Basketball")
				then
					tracking = false
					return
				end

				for i, v in pairs(game.Players:GetPlayers()) do
					if (v.Name ~= plr.Name and v.Character and plr.Character) and _G.Reach then
						local nearestPart = getNearestPart(v.Character.Torso)
						for z, x in pairs(v.Character:GetChildren()) do
							if ((nearestPart.Position - v.Character.Torso.Position).Magnitude < 8) then
								if (x:IsA("Tool") or x:IsA("Folder")) then
									firetouchinterest(nearestPart, x:FindFirstChildOfClass("Part"), 0)
									task.wait()
									firetouchinterest(nearestPart, x:FindFirstChildOfClass("Part"), 1)
								elseif (x:IsA("BasePart") and string.find(x.Name:lower(), "ball")) then
									firetouchinterest(nearestPart, x, 0)
									task.wait()
									firetouchinterest(nearestPart, x, 1)
								end
							end
						end
					end
				end
			end
		)
	end

	function shoot()
		local dist, goal = setup()
		local pwr = power()
		local arc = arc()

		if arc ~= nil and plr.Character and plr.Character:FindFirstChild("Humanoid") then
			local args =
				table(
					plr.Character.Torso.Position,
					(goal.Position + Vector3.new(0, arc, 0) - plr.Character.HumanoidRootPart.Position +
						plr.Character.Humanoid.MoveDirection).Unit
				)

			shootingEvent:FireServer(plr.Character.Basketball, pwr.Value, args, _G.key)
		end
	end

	function jumped()
		if
			_G.Aimbot and plr.Character and hasBall and plr.Character:FindFirstChild("HumanoidRootPart") and
			plr.Character.HumanoidRootPart.Transparency == 0
		then
			jumping = true
			task.wait(0.325)
			shoot()
			task.wait(0.1)
			jumping = false
		end
	end

	function added(v)
		if v.Name == "Basketball" then
			task.wait(0.5)
			hasBall = true
		end
	end

	function removed(v)
		if v.Name == "Basketball" then
			hasBall = false
		end
	end

	function began(key, gpe)
		if not gpe and key.KeyCode == Enum.KeyCode.U and _G.Autogaurd then
			updateNearestPlayerWithBall()
			if not tracking then
				tracking = true
			else
				tracking = false
			end
		end
	end

	_G.input = plr.Character.Humanoid.Jumping:Connect(jumped)
	_G.added = plr.Character.ChildAdded:Connect(added)
	_G.removed = plr.Character.ChildRemoved:Connect(removed)
	_G.stepped = rs.Stepped:Connect(stepped)
	_G.began = uis.InputBegan:Connect(began)

	_G.charAdded =
		plr.CharacterAdded:Connect(
			function(ch)
				_G.input = ch:WaitForChild("Humanoid").Jumping:Connect(jumped)
				_G.added = ch.ChildAdded:Connect(added)
				_G.removed = ch.ChildRemoved:Connect(removed)

				for i, v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("Size"))) do
				v:Disable()
			end
				for i, v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("BrickColor"))) do
				v:Disable()
			end
				for i, v in pairs(getconnections(ch:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("Color"))) do
				v:Disable()
			end
				for i, v in pairs(getconnections(ch:WaitForChild("Humanoid"):GetPropertyChangedSignal("WalkSpeed"))) do
				v:Disable()
			end
			end
		)

	
	-- end of aimbot
	
	local lastChasingState = false
	local maxChaseDistance = 45

	local chasingCoroutine
	local isChasing = false

	local function hasLocalPlayerBasketball()
		local localPlayer = Players.LocalPlayer
		local basketball = localPlayer.Character and localPlayer.Character:FindFirstChild("Basketball")

		return basketball and basketball:FindFirstChild("Ball") ~= nil
	end

	local function findNearestBasketball()
		local localPlayer = Players.LocalPlayer
		local basketballTools = {}

		for _, player in pairs(Players:GetPlayers()) do
			if player ~= localPlayer then
				local basketball = player.Character and player.Character:FindFirstChild("Basketball")

				if basketball and basketball:FindFirstChild("Ball") then
					table.insert(basketballTools, basketball.Ball)
				end
			end
		end

		local nearestBasketball = nil
		local nearestDistance = math.huge

		local humanoidRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")

		if not humanoidRootPart then
			return nil, nearestDistance
		end

		for _, ball in pairs(basketballTools) do
			local distance = (humanoidRootPart.Position - ball.Position).magnitude

			if distance < nearestDistance then
				nearestDistance = distance
				nearestBasketball = ball
			end
		end

		return nearestBasketball, nearestDistance
	end

	local function showNotification(title, description)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = description .. "\Made by Jermy/" .. "\Made by Sav/",
			Duration = 2
		})
	end

	local function moveTo(targetPosition)
		local localPlayer = Players.LocalPlayer
		local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			humanoid:MoveTo(targetPosition)
		end
	end

	local function toggleChasing(toggleState)
		if toggleState and not isChasing then
			chasingCoroutine = coroutine.create(function()
				isChasing = true
				while isChasing do
					wait(0.01)

					if not hasLocalPlayerBasketball() then
						local nearestBasketball, nearestDistance = findNearestBasketball()

						if nearestBasketball then
							if nearestDistance < maxChaseDistance and not lastChasingState then
								showNotification("Chasing Basketball", "Locked onto a basketball!")
								lastChasingState = true
							elseif nearestDistance >= maxChaseDistance and lastChasingState then
								showNotification("Out of Range", "The basketball is out of range.")
								lastChasingState = false
							end

							if nearestDistance < maxChaseDistance then
								moveTo(nearestBasketball.Position)
							end
						else
							if lastChasingState then
								showNotification("Not Chasing Basketball", "No basketball found.")
								lastChasingState = false
							end
						end
					else
						if lastChasingState then
							showNotification("Not Chasing Basketball", "You already have a basketball.")
							lastChasingState = false
						end
					end
				end

				if lastChasingState then
					showNotification("Not Chasing Basketball", "Chasing stopped.")
					lastChasingState = false
				end
			end)

			coroutine.resume(chasingCoroutine)
		elseif not toggleState and isChasing then
			isChasing = false
		end
	end

	-- Assuming you have a toggle implementation similar to the provided code
	HoopzTab.newToggle("AutoGuard", "Auto guard the player with the ball", false, function(toggleState)
		toggleChasing(toggleState)
	end)

	local mag = false  -- This variable will control whether the functionality is enabled or disabled
	local magRange = 10  -- Set a default value for the magnetization range

	local function getClosestBasketball()
		local closestDistance = math.huge
		local closestBasketball = nil
		for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
			if v.Name == "Ball" then
				local distance = (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
				if distance < closestDistance then
					closestDistance = distance
					closestBasketball = v
				end
			end
		end
		return closestBasketball
	end

	local humRootPart = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart

	local function enableMagFunctionality(toggleState)
		mag = toggleState
	end

	local humRootPart = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart

	Dahood.newButton("Fly", "Allows you to fly", function()
		loadstring(game:HttpGet("https://pastebin.com/raw/gJfKgLra"))();
	end)

	Dahood.newButton("Macro", "Fake mobile macro", function()
		loadstring(game:HttpGet("https://pastebin.com/raw/G1kYwZfa"))();
	end)

	local Oth = DrRayLibrary.newTab("Other", "ImageIdHere")

	Oth.newButton("Admin Commands", "Executes admin commands", function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", true))()
	end)

	Oth.newButton("Onscreen Keyboard", "Opens on-screen keyboard", function()
		loadstring(game:HttpGet("https://gist.githubusercontent.com/RedZenXYZ/4d80bfd70ee27000660e4bfa7509c667/raw/da903c570249ab3c0c1a74f3467260972c3d87e6/KeyBoard%20From%20Ohio%20Fr%20Fr"))()
	end)

	Oth.newButton("Dahood", "Executes Dahood script", function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Ryzzchips/SubtoRyzzchips/main/SubtoRyzzchips"))()
	end)

	-- End of other
end
---- FF2 HUB 
