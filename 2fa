--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.0) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=0 -0 ;local v32;while true do if (v31==(2 -1)) then return v32;end if (v31==((931 -(857 + 74)) -0)) then v32=v1(v16,v19,v19);v19=v19 + (2 -1) ;v31=620 -(555 + 64) ;end end end v23=nil;function v23()local v33=568 -(367 + 201) ;local v34;local v35;while true do if (v33==(927 -(214 + 713))) then v34,v35=v1(v16,v19,v19 + 1 + 1 );v19=v19 + 2 + 0 ;v33=1 -0 ;end if (v33==(1066 -((1338 -(226 + 1044)) + (4341 -3344)))) then return (v35 * (41 + 215)) + v34 ;end end end v18=3;end if (v18==4) then function v25()local v36=(976 -(814 + 45)) -(32 + (209 -124)) ;local v37;local v38;local v39;local v40;local v41;local v42;while true do if (v36==(3 + 0 + 0)) then if (v41==(0 + 0)) then if (v40==0) then return v42 * (957 -(892 + 65)) ;else local v108=0 -(0 + 0) ;while true do if (v108==(0 -0)) then v41=1 -0 ;v39=350 -(87 + 263) ;break;end end end elseif (v41==2047) then return ((v40==(180 -(67 + 113))) and (v42 * ((1 + 0)/(18 -((895 -(261 + 624)) + 8))))) or (v42 * NaN) ;end return v8(v42,v41-(2511 -1488) ) * (v39 + (v40/(((3 -1) + 0)^(494 -(416 + 26))))) ;end if (v36==(3 -2)) then v39=3 -2 ;v40=(v21(v38,953 -(802 + 150) ,20) * ((3 -1)^(85 -53))) + v37 ;v36=3 -1 ;end if (v36==(0 + 0)) then v37=v24();v38=v24();v36=998 -((1995 -(1020 + 60)) + 82) ;end if (v36==(5 -3)) then v41=v21(v38,18 + 3 ,803 -(201 + 571) );v42=((v21(v38,1170 -((1539 -(630 + 793)) + 1022) )==(4 -3)) and  -(1 + 0)) or (1 -0) ;v36=10 -7 ;end end end v26=nil;function v26(v43)local v44=(0 -0) -0 ;local v45;local v46;while true do if ((9 -7)==v44) then v46={};for v85=1 + 0 , #v45 do v46[v85]=v2(v1(v3(v45,v85,v85)));end v44=2 + (1818 -(1703 + 114)) ;end if ((9 -6)==v44) then return v6(v46);end if (v44==(1748 -(760 + 987))) then v45=v3(v16,v19,(v19 + v43) -(1914 -(1789 + 124)) );v19=v19 + v43 ;v44=768 -((1446 -(376 + 325)) + 21) ;end if (v44==(0 -0)) then v45=nil;if  not v43 then local v104=0 + 0 ;while true do if (v104==(0 + 0)) then v43=v24();if (v43==0) then return "";end break;end end end v44=1414 -(447 + 966) ;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v47=0;local v48;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v47~=(1 + 0)) then else local v77=0 -0 ;local v78;while true do if (v77==(0 -0)) then v78=0 -0 ;while true do if ((603 -(268 + 335))==v78) then v50=nil;v51=nil;v78=239 -(64 + 174) ;end if (v78~=1) then else v47=1 + 1 ;break;end end break;end end end if (v47==(290 -(60 + 230))) then local v79=572 -(426 + 146) ;local v80;while true do if (v79==0) then v80=0;while true do if (v80==(0 + 0)) then v48=1456 -(282 + 1174) ;v49=nil;v80=812 -(569 + 242) ;end if (v80==1) then v47=217 -(42 + 174) ;break;end end break;end end end if (v47==(3 + 0)) then v54=nil;while true do local v87=0 -0 ;local v88;while true do if (v87~=(0 + 0)) then else v88=1024 -(706 + 318) ;while true do if ((1252 -(721 + 530))==v88) then if (v48==(1273 -(945 + 326))) then local v114=1580 -(1183 + 397) ;local v115;while true do if (v114==(0 -0)) then v115=0 + 0 ;while true do if (v115==(700 -(271 + 429))) then local v226=0;while true do if ((1 + 0)==v226) then v115=1;break;end if (v226==(1500 -(1408 + 92))) then for v304=1 + 0 ,v53 do local v305=1086 -(461 + 625) ;local v306;local v307;local v308;while true do if (v305==(1288 -(993 + 295))) then v306=0;v307=nil;v305=1 + 0 ;end if (v305==1) then v308=nil;while true do if (v306~=(0 + 0)) then else local v326=0;local v327;while true do if (v326==0) then v327=1171 -(418 + 753) ;while true do if (0==v327) then local v338=0 + 0 ;while true do if (v338~=(1 + 0)) then else v327=3 -2 ;break;end if ((1661 -(1477 + 184))==v338) then v307=v22();v308=nil;v338=1 -0 ;end end end if (v327~=(1 + 0)) then else v306=1 + 0 ;break;end end break;end end end if (v306~=1) then else if (v307==(857 -(564 + 292))) then v308=v22()~=(529 -(406 + 123)) ;elseif (v307==(1771 -(1749 + 20))) then v308=v25();elseif (v307==(1 + 2)) then v308=v26();end v54[v304]=v308;break;end end break;end end end v52[1325 -(1249 + 73) ]=v22();v226=1 + 0 ;end end end if (v115==1) then for v251=1146 -(466 + 679) ,v24() do local v252=0 -0 ;local v253;local v254;local v255;while true do if ((0 -0)~=v252) then else v253=1900 -(106 + 1794) ;v254=nil;v252=1 + 0 ;end if (v252==1) then v255=nil;while true do if (v253==(1 + 0)) then while true do if (v254==(0 -0)) then v255=v22();if (v21(v255,2 -1 ,1)==(114 -(4 + 110))) then local v329=0;local v330;local v331;local v332;while true do if (v329==(587 -(57 + 527))) then if (v21(v331,1 + 2 ,1430 -(41 + 1386) )~=(104 -(17 + 86))) then else v332[3 + 1 ]=v54[v332[1142 -(782 + 356) ]];end v49[v251]=v332;break;end if ((268 -(176 + 91))==v329) then local v334=0 + 0 ;local v335;while true do if ((0 -0)~=v334) then else v335=0 -0 ;while true do if (v335==(1093 -(975 + 117))) then v329=1877 -(157 + 1718) ;break;end if (v335~=(0 -0)) then else local v346=166 -(122 + 44) ;while true do if (v346~=(0 -0)) then else v332={v23(),v23(),nil,nil};if (v330==(0 + 0)) then local v347=0 -0 ;local v348;local v349;while true do if (v347==0) then local v351=0 + 0 ;while true do if (v351~=(1 + 0)) then else v347=1;break;end if (v351==(0 -0)) then v348=65 -(30 + 35) ;v349=nil;v351=2 -1 ;end end end if (v347==(1 + 0)) then while true do if (v348==0) then v349=611 -(602 + 9) ;while true do if (v349==(1257 -(1043 + 214))) then v332[3]=v23();v332[4]=v23();break;end end break;end end break;end end elseif (v330==1) then v332[3]=v24();elseif (v330==(874 -(826 + 46))) then v332[3]=v24() -((949 -(245 + 702))^(60 -44)) ;elseif (v330~=3) then else local v353=0;local v354;while true do if (v353==(1212 -(323 + 889))) then v354=0 -0 ;while true do if (v354==(580 -(361 + 219))) then v332[9 -6 ]=v24() -((322 -(53 + 267))^16) ;v332[4]=v23();break;end end break;end end end v346=1;end if (v346==(1 -0)) then v335=1 + 0 ;break;end end end end break;end end end if (v329==(413 -(15 + 398))) then local v336=982 -(18 + 964) ;while true do if (v336==0) then local v341=0 -0 ;while true do if (v341==(2 -1)) then v336=1 + 0 ;break;end if ((0 + 0)~=v341) then else v330=v21(v255,852 -(20 + 830) ,3);v331=v21(v255,4,5 + 1 );v341=127 -(116 + 10) ;end end end if ((1 + 0)~=v336) then else v329=739 -(542 + 196) ;break;end end end if (v329~=2) then else local v337=0 -0 ;while true do if (v337~=1) then else v329=1 + 2 ;break;end if (v337==(1463 -(1404 + 59))) then if (v21(v331,1 + 0 ,1 + 0 )==(2 -1)) then v332[4 -2 ]=v54[v332[2 -0 ]];end if (v21(v331,767 -(468 + 297) ,2)==1) then v332[3]=v54[v332[1554 -(1126 + 425) ]];end v337=563 -(334 + 228) ;end end end end end break;end end break;end if (v253==(405 -(118 + 287))) then v254=0 -0 ;v255=nil;v253=3 -2 ;end end break;end end end v48=3;break;end end break;end end end if (v48==(1124 -(118 + 1003))) then local v116=0 -0 ;local v117;local v118;while true do if (v116~=(1 + 0)) then else while true do if ((236 -(141 + 95))==v117) then v118=377 -(142 + 235) ;while true do if (v118==(0 -0)) then local v295=0 + 0 ;while true do if (v295==0) then for v321=2 -1 ,v24() do v50[v321-(978 -(553 + 424)) ]=v29();end return v52;end end end end break;end end break;end if (v116==(0 + 0)) then v117=0 -0 ;v118=nil;v116=1;end end end break;end if ((0 -0)==v88) then local v113=0 + 0 ;while true do if (v113==(0 + 0)) then if (v48==1) then local v119=0 + 0 ;local v120;while true do if (v119~=(0 + 0)) then else v120=163 -(92 + 71) ;while true do if (v120==(1 + 0)) then v54={};v48=2 + 0 ;break;end if (v120==(0 -0)) then v52={v49,v50,nil,v51};v53=v24();v120=1 + 0 ;end end break;end end end if ((126 -(55 + 71))~=v48) then else local v121=0;while true do if (v121==1) then v51={};v48=1 -0 ;break;end if (v121~=(0 -0)) then else local v227=753 -(239 + 514) ;local v228;while true do if (v227~=0) then else v228=0 + 0 ;while true do if (1~=v228) then else v121=1 + 0 ;break;end if (v228==(1329 -(797 + 532))) then local v316=0;while true do if (v316==1) then v228=1;break;end if (v316~=(0 -0)) then else v49={};v50={};v316=1 + 0 ;end end end end break;end end end end end v113=1;end if (v113~=(1 + 0)) then else v88=2 -1 ;break;end end end end break;end end end break;end if (v47==(1204 -(373 + 829))) then local v81=731 -(476 + 255) ;while true do if (v81==1) then v47=3;break;end if (v81==(1130 -(369 + 761))) then v52=nil;v53=nil;v81=1;end end end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v55)if (v1(v55,2)==79) then local v71=0;while true do if (v71==0) then v20=v0(v3(v55,1,1));return "";end end else local v72=v2(v0(v55,16));if v20 then local v89=v5(v72,v20);v20=nil;return v89;else return v72;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v56=0 -0 ;local v57;local v58;local v59;local v60;while true do if (v56==((1557 -750) -(118 + 688))) then return (v60 * (16777264 -(25 + 23))) + (v59 * ((12791 -(11 + 86)) + 52842)) + (v58 * (2142 -(927 + 959))) + v57 ;end if (v56==0) then v57,v58,v59,v60=v1(v16,v19,v19 + (10 -7) );v19=v19 + 4 ;v56=733 -(16 + 716) ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v61,v62,v63)local v64=0;local v65;local v66;local v67;while true do if (v64==1) then v67=v61[3];return function(...)local v90=v65;local v91=v66;local v92=v67;local v93=v28;local v94=1;local v95= -1;local v96={};local v97={...};local v98=v12("#",...) -1 ;local v99={};local v100={};for v105=0,v98 do if (v105>=v92) then v96[v105-v92 ]=v97[v105 + 1 ];else v100[v105]=v97[v105 + 1 ];end end local v101=(v98-v92) + 1 ;local v102;local v103;while true do v102=v90[v94];v103=v102[1];if (v103<=28) then if (v103<=13) then if (v103<=6) then if (v103<=2) then if (v103<=0) then local v122=0;local v123;local v124;local v125;local v126;while true do if (v122==0) then v123=v102[2];v124,v125=v93(v100[v123](v13(v100,v123 + 1 ,v102[3])));v122=1;end if (v122==2) then for v256=v123,v95 do v126=v126 + 1 ;v100[v256]=v124[v126];end break;end if (v122==1) then v95=(v125 + v123) -1 ;v126=0;v122=2;end end elseif (v103>1) then v100[v102[2]]={};else v100[v102[2]]=v100[v102[3]];end elseif (v103<=4) then if (v103>3) then local v152=v91[v102[3]];local v153;local v154={};v153=v10({},{__index=function(v230,v231)local v232=0;local v233;while true do if (v232==0) then v233=v154[v231];return v233[1][v233[2]];end end end,__newindex=function(v234,v235,v236)local v237=v154[v235];v237[1][v237[2]]=v236;end});for v239=1,v102[4] do v94=v94 + 1 ;local v240=v90[v94];if (v240[1]==1) then v154[v239-1 ]={v100,v240[3]};else v154[v239-1 ]={v62,v240[3]};end v99[ #v99 + 1 ]=v154;end v100[v102[2]]=v30(v152,v153,v63);else v100[v102[2]]=v100[v102[3]][v102[4]];end elseif (v103>5) then local v158=v102[2];v100[v158]=v100[v158](v13(v100,v158 + 1 ,v95));else v100[v102[2]]=v100[v102[3]][v102[4]];end elseif (v103<=9) then if (v103<=7) then local v127=0;local v128;while true do if (v127==0) then v128=v102[2];v100[v128](v13(v100,v128 + 1 ,v102[3]));break;end end elseif (v103==8) then v100[v102[2]][v102[3]]=v100[v102[4]];else for v243=v102[2],v102[3] do v100[v243]=nil;end end elseif (v103<=11) then if (v103>10) then local v164=0;local v165;while true do if (0==v164) then v165=v102[2];v100[v165]=v100[v165]();break;end end elseif (v100[v102[2]]==v102[4]) then v94=v94 + 1 ;else v94=v102[3];end elseif (v103==12) then if  not v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end else local v166=0;local v167;local v168;while true do if (v166==0) then v167=v102[2];v168={};v166=1;end if (v166==1) then for v297=1, #v99 do local v298=v99[v297];for v309=0, #v298 do local v310=v298[v309];local v311=v310[1];local v312=v310[2];if ((v311==v100) and (v312>=v167)) then local v317=0;while true do if (v317==0) then v168[v312]=v311[v312];v310[1]=v168;break;end end end end end break;end end end elseif (v103<=20) then if (v103<=16) then if (v103<=14) then if ((v102[3]=="_ENV") or (v102[3]=="getfenv")) then v100[v102[2]]=v63;else v100[v102[2]]=v63[v102[3]];end elseif (v103>15) then if v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end else v100[v102[2]]=v102[3];end elseif (v103<=18) then if (v103>17) then local v174=v102[2];v100[v174]=v100[v174]();else v100[v102[2]]();end elseif (v103>19) then local v176=0;local v177;while true do if (v176==0) then v177=v102[2];v100[v177](v13(v100,v177 + 1 ,v102[3]));break;end end else local v178=v102[2];v100[v178](v100[v178 + 1 ]);end elseif (v103<=24) then if (v103<=22) then if (v103==21) then if (v102[2]==v100[v102[4]]) then v94=v94 + 1 ;else v94=v102[3];end elseif  not v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103==23) then if (v102[2]==v100[v102[4]]) then v94=v94 + 1 ;else v94=v102[3];end else v62[v102[3]]=v100[v102[2]];end elseif (v103<=26) then if (v103>25) then v100[v102[2]]=v30(v91[v102[3]],nil,v63);else v100[v102[2]][v102[3]]=v100[v102[4]];end elseif (v103==27) then if v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end else local v184=v102[2];v100[v184](v100[v184 + 1 ]);end elseif (v103<=42) then if (v103<=35) then if (v103<=31) then if (v103<=29) then v100[v102[2]]=v62[v102[3]];elseif (v103>30) then do return;end else local v185=0;local v186;while true do if (v185==0) then v186=v102[2];v100[v186]=v100[v186](v100[v186 + 1 ]);break;end end end elseif (v103<=33) then if (v103>32) then local v187=v102[2];local v188={};for v245=1, #v99 do local v246=v99[v245];for v266=0, #v246 do local v267=0;local v268;local v269;local v270;while true do if (v267==0) then v268=v246[v266];v269=v268[1];v267=1;end if (v267==1) then v270=v268[2];if ((v269==v100) and (v270>=v187)) then v188[v270]=v269[v270];v268[1]=v188;end break;end end end end else v100[v102[2]]={};end elseif (v103==34) then v94=v102[3];else local v191=0;local v192;local v193;while true do if (v191==1) then v100[v192 + 1 ]=v193;v100[v192]=v193[v102[4]];break;end if (v191==0) then v192=v102[2];v193=v100[v102[3]];v191=1;end end end elseif (v103<=38) then if (v103<=36) then local v131=0;local v132;while true do if (0==v131) then v132=v102[2];v100[v132]=v100[v132](v13(v100,v132 + 1 ,v102[3]));break;end end elseif (v103>37) then local v194=v102[2];v100[v194]=v100[v194](v13(v100,v194 + 1 ,v95));else v94=v102[3];end elseif (v103<=40) then if (v103>39) then v100[v102[2]]=v30(v91[v102[3]],nil,v63);else v62[v102[3]]=v100[v102[2]];end elseif (v103==41) then v100[v102[2]]=v102[3]~=0 ;else local v201=v102[2];v100[v201]=v100[v201](v100[v201 + 1 ]);end elseif (v103<=49) then if (v103<=45) then if (v103<=43) then local v133=v91[v102[3]];local v134;local v135={};v134=v10({},{__index=function(v137,v138)local v139=0;local v140;while true do if (v139==0) then v140=v135[v138];return v140[1][v140[2]];end end end,__newindex=function(v141,v142,v143)local v144=0;local v145;while true do if (v144==0) then v145=v135[v142];v145[1][v145[2]]=v143;break;end end end});for v146=1,v102[4] do local v147=0;local v148;while true do if (v147==1) then if (v148[1]==1) then v135[v146-1 ]={v100,v148[3]};else v135[v146-1 ]={v62,v148[3]};end v99[ #v99 + 1 ]=v135;break;end if (v147==0) then v94=v94 + 1 ;v148=v90[v94];v147=1;end end end v100[v102[2]]=v30(v133,v134,v63);elseif (v103==44) then v100[v102[2]][v102[3]]=v102[4];else local v205=0;local v206;local v207;local v208;local v209;while true do if (1==v205) then v95=(v208 + v206) -1 ;v209=0;v205=2;end if (0==v205) then v206=v102[2];v207,v208=v93(v100[v206](v13(v100,v206 + 1 ,v102[3])));v205=1;end if (v205==2) then for v301=v206,v95 do v209=v209 + 1 ;v100[v301]=v207[v209];end break;end end end elseif (v103<=47) then if (v103>46) then v100[v102[2]]=v102[3];else v100[v102[2]]=v62[v102[3]];end elseif (v103==48) then v100[v102[2]]();elseif ((v102[3]=="_ENV") or (v102[3]=="getfenv")) then v100[v102[2]]=v63;else v100[v102[2]]=v63[v102[3]];end elseif (v103<=53) then if (v103<=51) then if (v103>50) then v100[v102[2]][v102[3]]=v102[4];else v100[v102[2]]=v102[3]~=0 ;end elseif (v103>52) then local v217=v102[2];local v218=v100[v102[3]];v100[v217 + 1 ]=v218;v100[v217]=v218[v102[4]];else v100[v102[2]]=v100[v102[3]];end elseif (v103<=55) then if (v103>54) then do return;end elseif (v100[v102[2]]==v102[4]) then v94=v94 + 1 ;else v94=v102[3];end elseif (v103>56) then for v249=v102[2],v102[3] do v100[v249]=nil;end else local v224=v102[2];v100[v224]=v100[v224](v13(v100,v224 + 1 ,v102[3]));end v94=v94 + 1 ;end end;end if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v68,v69,v70)if v70 then local v73=0 -0 ;local v74;while true do if (v73==((818 -(43 + 490)) -(175 + 110))) then v74=(v68/((735 -(711 + 22))^(v69-(2 -1))))%(2^(((v70-(4 -3)) -(v69-(1797 -(503 + 1293)))) + 1)) ;return v74-(v74%(2 -1)) ;end end else local v75=0 + 0 ;local v76;while true do if (v75==(1061 -(810 + (970 -719)))) then v76=(2 + 0)^(v69-1) ;return (((v68%(v76 + v76))>=v76) and (1 + 0)) or (0 + 0) ;end end end end v22=nil;v18=2;end end end vv9(),...);
